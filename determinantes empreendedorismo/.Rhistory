resultado_best <- select_best(treinando_modelo, "rmse")
final_modelo <- dt_model %>%
finalize_model(resultado_best)
workflow() %>%
add_recipe(recipe_model) %>%
add_model(final_modelo) %>%
last_fit(splits) %>%
collect_predictions() %>%
select(.row, taxa_homicid, .pred) %>%
ggplot(aes(x = taxa_homicid, y = .pred)) +
geom_point()
workflow() %>%
add_recipe(recipe_model) %>%
add_model(final_modelo) %>%
last_fit(splits) %>%
collect_predictions() %>%
select(.row, taxa_homicid, .pred) %>%
ggplot(aes(x = homicid_log, y = .pred)) +
geom_point()
workflow() %>%
add_recipe(recipe_model) %>%
add_model(final_modelo) %>%
last_fit(splits) %>%
collect_predictions() %>%
select(.row, homicid_log, .pred) %>%
ggplot(aes(x = homicid_log, y = .pred)) +
geom_point()
setwd("C:/Users/danie/OneDrive/√Årea de Trabalho/DS Projects/Projetos/Determinantes Mulheres Empreendedoras")
setwd("~/GitHub/Sebrae-go-mulheres/determinantes empreendedorismo")
base_mulheres <- readxl::read_excel("determinantes.xlsx", col_types = c("text", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
base_mulheres <- readxl::read_excel("determinantes.xlsx", col_types = c("text", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric")) %>%
janitor::clean_names()
View(base_mulheres)
base_mulheres[is.na(base_mulheres)] <- 0
View(base_mulheres)
base_mulheres[is.na(base_mulheres)] <- 0
base_mulheres <- base_mulheres %>%
mutate(log_emp_mulher = log(tx_emp_mulher),
log_pibpcapta = log(pib_per_capta),
log_empregos = log(empregos_formais))
base_mulheres <- base_mulheres %>%
filter(log_pibpcapta != -Inf & log_empregos != -Inf)
base_mulheres <- base_mulheres %>%
select(localidade,tx_emp_mulher,log_emp_mulher,
crimes_patrim,crimes_contra_pessoa,escolarid_trab,
pib_per_capta, log_pibpcapta, empregos_formais,
log_empregos,infra_agua,infra_internet)
base_mulheres <- base_mulheres %>%
mutate(log_emp_mulher = log(tx_emp_mulher),
log_pibpcapta = log(pib_per_capta),
log_empregos = log(empregos_formais))
base_mulheres <- readxl::read_excel("base_mulheres.xlsx",
col_types = c("text", "numeric", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric")) %>% janitor::clean_names()
base_mulheres <- readxl::read_excel("base_mulheres.xlsx",
col_types = c("text", "numeric", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric")) %>% janitor::clean_names()
base_mulheres[is.na(base_mulheres)] <- 0
base_mulheres <- base_mulheres %>%
mutate(log_emp_mulher = log(tx_emp_mulher),
log_pibpcapta = log(pib_per_capta),
log_empregos = log(empregos_formais))
base_mulheres <- base_mulheres %>%
filter(log_pibpcapta != -Inf & log_empregos != -Inf)
base_mulheres <- base_mulheres %>%
select(localidade,tx_emp_mulher,log_emp_mulher,
crimes_patrim,crimes_contra_pessoa,escolarid_trab,
pib_per_capta, log_pibpcapta, empregos_formais,
log_empregos,infra_agua,infra_internet)
base_mulheres <- base_mulheres %>%
filter(crimes_patrim != 0 & crimes_contra_pessoa != 0 &
escolarid_trab != 0 & infra_agua != 0 &
infra_internet != 0)
View(base_mulheres)
base_mulheres <- readxl::read_excel("base_mulheres.xlsx",
col_types = c("text", "numeric", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric")) %>% janitor::clean_names()
base_mulheres[is.na(base_mulheres)] <- 0
base_mulheres <- base_mulheres %>%
mutate(log_emp_mulher = log(tx_emp_mulher),
log_pibpcapta = log(pib_per_capta),
log_empregos = log(empregos_formais))
base_mulheres <- base_mulheres %>%
filter(log_pibpcapta != -Inf & log_empregos != -Inf)
View(base_mulheres)
base_mulheres <- base_mulheres %>%
select(localidade,tx_emp_mulher,log_emp_mulher,
crimes_patrim,crimes_contra_pessoa,escolarid_trab,
pib_per_capta, log_pibpcapta, empregos_formais,
log_empregos,infra_agua,infra_internet, infra_energia,
infra_esgoto, st_agro, st_ind, st_serv,
ideb_quinto_ano, ideb_nono_ano, crimes_sex,
escolarid_trab, remun_mediana)
base_mulheres <- readxl::read_excel("base_mulheres.xlsx",
col_types = c("text", "numeric", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric")) %>% janitor::clean_names()
base_mulheres[is.na(base_mulheres)] <- 0
base_mulheres <- base_mulheres %>%
mutate(log_emp_mulher = log(tx_emp_mulher),
log_pibpcapta = log(pib_per_capta),
log_empregos = log(empregos_formais))
base_mulheres <- base_mulheres %>%
filter(log_pibpcapta != -Inf & log_empregos != -Inf)
View(base_mulheres)
base_mulheres <- base_mulheres %>%
select(localidade,mesoregiao,tx_emp_mulher,log_emp_mulher,
crimes_patrim,crimes_contra_pessoa,escolarid_trab,
pib_per_capta, log_pibpcapta, empregos_formais,
log_empregos,infra_agua,infra_internet, infra_energia,
infra_esgoto, st_agro, st_ind, st_serv,
ideb_quinto_ano, ideb_nono_ano, crimes_sex,
escolarid_trab, remun_mediana)
base_mulheres <- base_mulheres %>%
select(localidade,mesorregiao,tx_emp_mulher,log_emp_mulher,
crimes_patrim,crimes_contra_pessoa,escolarid_trab,
pib_per_capta, log_pibpcapta, empregos_formais,
log_empregos,infra_agua,infra_internet, infra_energia,
infra_esgoto, st_agro, st_ind, st_serv,
ideb_quinto_ano, ideb_nono_ano, crimes_sex,
escolarid_trab, remun_mediana)
library(tidyverse); library(tidymodels)
splits <- initial_split(base_mulheres, strata = mesorregiao)
split_treino <- training(splits)
split_teste <- testing(splits)
base_mulheres <- base_mulheres %>%
select(mesorregiao,tx_emp_mulher,log_emp_mulher,
crimes_patrim,crimes_contra_pessoa,escolarid_trab,
pib_per_capta, log_pibpcapta, empregos_formais,
log_empregos,infra_agua,infra_internet, infra_energia,
infra_esgoto, st_agro, st_ind, st_serv,
ideb_quinto_ano, ideb_nono_ano, crimes_sex,
escolarid_trab, remun_mediana)
splits <- initial_split(base_mulheres, strata = mesorregiao)
split_treino <- training(splits)
split_teste <- testing(splits)
base_mulheres <- base_mulheres %>%
select(mesorregiao,log_emp_mulher, crimes_patrim,crimes_contra_pessoa,escolarid_trab,
log_pibpcapta, log_empregos,infra_agua,infra_internet, infra_energia,
infra_esgoto, st_agro, st_ind, st_serv,
ideb_quinto_ano, ideb_nono_ano, crimes_sex,
escolarid_trab, remun_mediana)
splits <- initial_split(base_mulheres, strata = mesorregiao)
split_treino <- training(splits)
split_teste <- testing(splits)
recipe_model <- recipe(
log_emp_mulher ~ ., data = split_treino) %>%
step_dummy(all_nominal_predictors())
preparado <- prep(recipe_model)
base_pos_recipe <- juice(preparado)
View(base_pos_recipe)
# modelo ------------------------------------------------------------------
dt_model <- decision_tree(
cost_complexity = tune(), min_n = tune()) %>%
set_engine("rpart") %>%
set_mode("regression")
dt_workflow <- workflow() %>%
add_model(dt_model) %>%
add_recipe(recipe_model)
# validacao cruzada -------------------------------------------------------
validacao_cruzada <- vfold_cv(split_treino, v = 4, strata = mesorregiao)
# treinando ---------------------------------------------------------------
treinando_modelo <- dt_workflow %>%
tune_grid(
validacao_cruzada,
grid = 10,
control = control_grid(save_pred = TRUE),
metrics = metric_set(rmse,rsq,mae,mape))
autoplot(treinando_modelo)
View(treinando_modelo)
treinando_modelo %>%
show_best()
treinando_modelo %>%
show_best(metric = "mae")
treinando_modelo %>%
show_best(metric = "mape")
treinando_modelo %>%
show_best(metric = "mpe")
?show_best
treinando_modelo %>%
show_best(metric = "mpe")
treinando_modelo %>%
show_best(metric = "mpe")
resultado_best <- select_best(treinando_modelo, "rmse")
final_modelo <- dt_model %>%
finalize_model(resultado_best)
workflow() %>%
add_recipe(recipe_model) %>%
add_model(final_modelo) %>%
last_fit(splits) %>%
collect_predictions() %>%
select(.row, homicid_log, .pred) %>%
ggplot(aes(x = homicid_log, y = .pred)) +
geom_point()
workflow() %>%
add_recipe(recipe_model) %>%
add_model(final_modelo) %>%
last_fit(splits) %>%
collect_predictions() %>%
select(.row, log_emp_mulher, .pred) %>%
ggplot(aes(x = log_emp_mulher, y = .pred)) +
geom_point()
workflow() %>%
add_recipe(recipe_model) %>%
add_model(final_modelo) %>%
last_fit(splits) %>%
collect_predictions()
previsoes <- workflow() %>%
add_recipe(recipe_model) %>%
add_model(final_modelo) %>%
last_fit(splits) %>%
collect_predictions()
View(previsoes)
View(treinando_modelo)
View(treinando_modelo[[1]][[1]])
View(treinando_modelo[[1]][[1]][["data"]])
View(treinando_modelo[[1]][[1]][["id"]])
treinando_modelo[[1]][[1]][["in_id"]]
xgb_model <- boost_tree(
trees = 1000,
tree_depth = tune(),
min_n = tune(),
loss_reduction = tune(),
sample_size = tune(),
mtry = tune(),
learn_rate = tune()) %>%
set_engine("xgboost") %>%
set_mode("regression")
dt_workflow <- workflow() %>%
add_model(xgb_model) %>%
add_recipe(recipe_model)
validacao_cruzada <- vfold_cv(split_treino, v = 4, strata = mesorregiao)
# treinando ---------------------------------------------------------------
treinando_modelo <- dt_workflow %>%
tune_grid(
validacao_cruzada,
grid = 10,
control = control_grid(save_pred = TRUE),
metrics = metric_set(rmse,rsq,mae,mape))
autoplot(treinando_modelo)
treinando_modelo %>%
show_best(metric = "mape")
resultado_best <- select_best(treinando_modelo, "rmse")
final_modelo <- dt_model %>%
finalize_model(resultado_best)
previsoes <- workflow() %>%
add_recipe(recipe_model) %>%
add_model(final_modelo) %>%
last_fit(splits) %>%
collect_predictions()
autoplot(treinando_modelo)
treinando_modelo %>%
show_best(metric = "mape")
resultado_best <- select_best(treinando_modelo, "rmse")
final_modelo <- dt_model %>%
finalize_model(resultado_best)
previsoes <- workflow() %>%
add_recipe(recipe_model) %>%
add_model(final_modelo) %>%
last_fit(splits) %>%
collect_predictions()
previsoes %>%
select(.row, log_emp_mulher, .pred) %>%
ggplot(aes(x = log_emp_mulher, y = .pred)) +
geom_point()
final_modelo <- xgb_model %>%
finalize_model(resultado_best)
previsoes <- workflow() %>%
add_recipe(recipe_model) %>%
add_model(final_modelo) %>%
last_fit(splits) %>%
collect_predictions()
previsoes %>%
select(.row, log_emp_mulher, .pred) %>%
ggplot(aes(x = log_emp_mulher, y = .pred)) +
geom_point()
View(previsoes)
previsoes %>%
select(.row, log_emp_mulher, .pred) %>%
ggplot(aes(x = log_emp_mulher, y = .pred)) +
geom_point() + geom_smooth("lm")
previsoes %>%
select(.row, log_emp_mulher, .pred) %>%
ggplot(aes(x = log_emp_mulher, y = .pred)) +
geom_point() + geom_smooth(method="lm")
previsoes %>%
select(.row, log_emp_mulher, .pred) %>%
ggplot(aes(x = log_emp_mulher, y = .pred)) +
geom_point() + geom_smooth(method="lm", se = FALSE)
treinando_modelo %>%
collect_metrics()
treinando_modelo %>%
show_best(metric = "mape")
treinando_modelo %>%
show_best(metric = "rmse")
treinando_modelo %>%
show_best(metric = "mae")
treinando_modelo %>%
show_best(metric = "mpe")
treinando_modelo %>%
show_best(metric = "mae")
base_mulheres %>%
GGally::ggpairs()
splits <- initial_split(base_mulheres, prop = 0.7, strata = mesorregiao)
split_treino <- training(splits)
split_teste <- testing(splits)
recipe_model <- recipe(log_emp_mulher ~ ., data = split_treino) %>%
step_dummy(all_nominal_predictors()) %>%
step_corr(all_numeric(), -all_outcomes())
preparado <- prep(recipe_model, training = split_treino)
preparado
recipe_model <- recipe(log_emp_mulher ~ ., data = split_treino) %>%
step_dummy(all_nominal_predictors()) %>%
step_corr(all_numeric(), -all_outcomes(), threshold = 0.80)
preparado <- prep(recipe_model, training = split_treino)
base_pos_recipe <- juice(preparado)
preparado
base_pos_recipe
dt_workflow
treinando_modelo <- dt_workflow %>%
tune_grid(resamples = validacao_cruzada,
grid = 10,
control = control_grid(save_pred = TRUE),
metrics = metric_set(rmse,rsq,mae,mape))
treinando_modelo %>%
collect_metrics()
validacao_cruzada <- vfold_cv(split_treino, v = 5, strata = mesorregiao)
treinando_modelo <- dt_workflow %>%
tune_grid(resamples = validacao_cruzada,
grid = 10,
control = control_grid(save_pred = TRUE),
metrics = metric_set(rmse,rsq,mae,mape))
treinando_modelo %>%
collect_metrics()
treinando_modelo %>%
collect_metrics()
treinando_modelo %>%
show_best(metric = "mae")
treinando_modelo %>%
show_best(metric = "mape")
metricas_treino <- treinando_modelo %>%
collect_metrics()
metricas_treino <- treinando_modelo %>%
collect_metrics()
View(metricas_treino)
autoplot(treinando_modelo)
resultado_best <- select_best(treinando_modelo, "rmse")
best_grid_modelo <- select_best(treinando_modelo, "rmse")
View(best_grid_modelo)
final_modelo <- xgb_model %>%
finalize_model(dt_workflow, best_grid_modelo)
final_modelo <- finalize_model(dt_workflow, best_grid_modelo)
final_modelo <- xgb_model %>%
finalize_model(best_grid_modelo)
final_modelo <- finalize_workflow(dt_workflow, best_grid_modelo)
final_modelo <- xgb_model %>%
finalize_model(best_grid_modelo)
View(final_modelo)
final_modelo2 <- finalize_workflow(dt_workflow, best_grid_modelo)
View(final_modelo2)
View(final_modelo)
View(final_modelo2)
best_workflow <- finalize_workflow(dt_workflow, best_grid_modelo)
best_workflow
best_workflow %>%
last_fit(best_workflow, split = splits) %>%
previsoes <- workflow() %>%
add_recipe(recipe_model) %>%
add_model(final_modelo) %>%
last_fit(splits) %>%
collect_predictions()
best_workflow %>%
last_fit(best_workflow, split = splits)
best_workflow %>%
last_fit(best_workflow, split = splits) %>%
collect_metrics()
best_workflow %>%
last_fit(best_workflow, split = splits) %>%
collect_metrics(metric_set('mae'))
best_workflow %>%
last_fit(best_workflow, split = splits) %>%
collect_metrics(metrics = 'mae')
best_workflow %>%
last_fit(best_workflow, split = splits) %>%
collect_metrics(metrics = 'mape')
treinando_modelo %>%
show_best(metric = "rmse")
best_workflow %>%
last_fit(best_workflow, split = splits) %>%
collect_metrics(metric = 'rmse')
best_workflow %>%
last_fit(best_workflow, split = splits) %>%
unnest(.metrics)
best_workflow %>%
last_fit(best_workflow, split = splits) %>%
unnest(.predictions)
final_modelo_xgb <- fit(best_workflow, data = base_mulheres)
View(final_modelo_xgb)
best_workflow %>%
fit(data = base_mulheres) %>%
pull_workflow_fit() %>%
vip(geom = "point")
library(tidyverse); library(tidymodels); library(vip)
best_workflow %>%
fit(data = base_mulheres) %>%
pull_workflow_fit() %>%
vip(geom = "point")
best_workflow %>%
fit(data = base_mulheres) %>%
pull_workflow_fit() %>%
vip(geom = "col")
best_workflow %>%
last_fit(best_workflow, split = splits) %>%
unnest(.predictions)
View(best_workflow)
best_workflow %>%
fit(data = base_mulheres) %>%
pull_workflow_fit()
?vip
best_workflow %>%
fit(data = base_mulheres) %>%
pull_workflow_fit() %>%
vip(geom = "col")
vip(final_modelo_xgb)
vip(best_workflow)
best_workflow %>%
fit(data = base_mulheres) %>%
pull_workflow_fit() %>%
vi()
best_workflow %>%
fit(data = base_mulheres) %>%
extract_fit_parsnip() %>%
vi()
final_modelo_xgb
View(final_modelo_xgb)
View(final_modelo_xgb)
final_modelo_xgb[["fit"]][["fit"]][["fit"]][["call"]]
